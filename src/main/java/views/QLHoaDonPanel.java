/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import domainmodels.HoaDon;
import domainmodels.HoaDonChiTiet;
import domainmodels.KhachHang;
import domainmodels.NhanVien;
import java.awt.Component;
import java.awt.Image;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import services.ChiTietSPServices;
import services.HoaDonChiTietServices;
import services.HoaDonServices;
import services.IChiTietSPServices;
import services.IHoaDonChiTietServies;
import services.IHoaDonServices;
import services.IKhachHangService;
import services.INhanVienServices;
import services.IQLSanPhamServices;
import services.KhachHangService;
import services.NhanVienServices;
import services.QLSanPhamServices;
import services.TaoHoaDonServices;
import viewmodels.ChiTietSPViewModels;

/**
 *
 * @author HANGOCHAN
 */
public class QLHoaDonPanel extends javax.swing.JPanel {

    /**
     * Creates new form QLHoaDonPanel
     */
    private IHoaDonServices hoaDonServices;
    private IHoaDonChiTietServies hoaDonChiTietServies;
    private IChiTietSPServices chiTietSPServices;
    private INhanVienServices nhanVienServices;
    private IKhachHangService khachHangService;
    private IQLSanPhamServices sanPhamServices;
    
    public QLHoaDonPanel() {
        initComponents();
        
        hoaDonServices = new HoaDonServices();
        hoaDonChiTietServies = new HoaDonChiTietServices();
        chiTietSPServices = new ChiTietSPServices();
        nhanVienServices = new NhanVienServices();
        khachHangService = new KhachHangService();
        sanPhamServices = new QLSanPhamServices();
        
        rbTatCa.setSelected(true);
        rbDaHuy.setSelected(false);
        rbDaThanhToan.setSelected(false);
        
        loadHoaDonChiTiet();
    }
    
    public void loadHoaDonChiTiet() {
        tbHoaDonChiTiet.getColumn("Ảnh").setCellRenderer(new myTableCellRender());
        DefaultTableModel model = (DefaultTableModel) tbHoaDon.getModel();
        model.setRowCount(0);
        List<HoaDon> hoaDons = hoaDonServices.getALL();
        List<NhanVien> nhanViens = nhanVienServices.getALL();
        List<KhachHang> khachHangs = khachHangService.getALL();
        String tenNhanVien = "";
        String tenKH = "";
        String trangThai = "";
        for (HoaDon hoaDon : hoaDons) {
            if (hoaDon.getTrangThai() == 1) {
                trangThai = "Đã Hủy";
            } else {
                trangThai = "Đã thanh toán";
            }
            for (KhachHang khachHang : khachHangs) {
                if (hoaDon.getKhachHang().getMaKH().equals(khachHang.getMaKH())) {
                    tenKH = khachHang.getTenKH();
                }
            }
            for (NhanVien nhanVien : nhanViens) {
                if (hoaDon.getNhanVien().getMaNV().equals(nhanVien.getMaNV())) {
                    tenNhanVien = nhanVien.getTenNV();
                }
            }
            String sdf = "";
            Date date = hoaDon.getNgayMua();
            if (date == null) {
                sdf = "";
               
            }else{
                sdf = new SimpleDateFormat("dd/MM/yyyy").format(date);
            }
            Object[] data = new Object[]{
                hoaDon.getMaHD(),
                hoaDon.getTenNguoiNhan(),
                sdf,
                hoaDon.getGhiChu(),
                hoaDon.getDiaChiNhanHang(),
                tenKH,
                tenNhanVien,
                hoaDon.getGiamGia(),
                hoaDon.getTongTien(),
                trangThai
            
            };
            model.addRow(data);
            
        }
    }
    
    class myTableCellRender implements TableCellRenderer {
        
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            tbHoaDonChiTiet.setRowHeight(70);
            
            return (Component) value;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        hoadon = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHoaDonChiTiet = new javax.swing.JTable();
        lbHoaDonChiTiet = new javax.swing.JLabel();
        rbTatCa = new javax.swing.JRadioButton();
        rbDaHuy = new javax.swing.JRadioButton();
        rbDaThanhToan = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        btnIn = new javax.swing.JLabel();

        hoadon.setBackground(new java.awt.Color(255, 255, 255));

        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HD", "Tên Người Nhận", "Ngày Mua", "Ghi Chú", "Địa Chỉ Nhận Hàng", "Tên Khách Hàng", "Tên Nhân Viên", "Giảm Giá ", "Tổng Tiền", "Trạng Thái"
            }
        ));
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbHoaDonMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbHoaDon);

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_purchase_order_30px.png"))); // NOI18N
        jLabel23.setText("Hóa Đơn");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_Invoice_30px_1.png"))); // NOI18N
        jLabel24.setText("Hóa Đơn Chi Tiết");

        tbHoaDonChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ảnh", "Mã Imei", "Số Lượng", "Đơn Giá"
            }
        ));
        tbHoaDonChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonChiTietMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbHoaDonChiTiet);

        lbHoaDonChiTiet.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbHoaDonChiTiet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbHoaDonChiTiet.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        buttonGroup1.add(rbTatCa);
        rbTatCa.setText("Tất cả");
        rbTatCa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbTatCaMousePressed(evt);
            }
        });

        buttonGroup1.add(rbDaHuy);
        rbDaHuy.setText("Đã hủy");
        rbDaHuy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbDaHuyMousePressed(evt);
            }
        });

        buttonGroup1.add(rbDaThanhToan);
        rbDaThanhToan.setText("Đã thanh toán");
        rbDaThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbDaThanhToanMousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_conversion_25px_1.png"))); // NOI18N
        jLabel1.setText("Lọc");

        btnIn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_print_30px.png"))); // NOI18N
        btnIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnInMousePressed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnIn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnIn, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout hoadonLayout = new javax.swing.GroupLayout(hoadon);
        hoadon.setLayout(hoadonLayout);
        hoadonLayout.setHorizontalGroup(
            hoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hoadonLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(hoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hoadonLayout.createSequentialGroup()
                        .addGroup(hoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 955, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(hoadonLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 959, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(hoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lbHoaDonChiTiet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 37, Short.MAX_VALUE))
                    .addGroup(hoadonLayout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbTatCa)
                        .addGap(18, 18, 18)
                        .addComponent(rbDaHuy)
                        .addGap(18, 18, 18)
                        .addComponent(rbDaThanhToan)
                        .addGap(208, 208, 208))))
        );
        hoadonLayout.setVerticalGroup(
            hoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hoadonLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(hoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(hoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbTatCa)
                        .addComponent(rbDaHuy)
                        .addComponent(rbDaThanhToan)
                        .addComponent(jLabel1))
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbHoaDonChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1089, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(hoadon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 744, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(hoadon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbHoaDonChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonChiTietMouseClicked
        // TODO add your handling code here:
        //
        //        DefaultTableModel model = (DefaultTableModel) tbHoaDon.getModel();
        //        model.setRowCount(0);
        //        List<HoaDon> hoaDons = hoaDonServices.getALL();
        //        List<NhanVien> nhanViens = nhanVienServices.getALL();
        //        List<KhachHang> khachHangs = khachHangService.getALL();
        //        String tenKhachHang = "";
        //        String tenNV = "";
        //        for (HoaDon hoaDon : hoaDons) {
        //            for (KhachHang khachHang : khachHangs) {
        //                if (hoaDon.getKhachHang().getMaKH().equals(khachHang.getMaKH())) {
        //                    tenKhachHang = khachHang.getTenKH();
        //                }
        //            }
        //            for (NhanVien nhanVien : nhanViens) {
        //                if (hoaDon.getNhanVien().getMaNV().equals(nhanVien.getMaNV())) {
        //                    tenNV = nhanVien.getTenNV();
        //                }
        //            }
        //            Object[] data = new Object[]{
        //                hoaDon.getMaHD(),
        //                hoaDon.getTenNguoiNhan(),
        //                hoaDon.getNgayMua(),
        //                hoaDon.getGhiChu(),
        //                hoaDon.getDiaChiNhanHang(),
        //                tenKhachHang,
        //                tenNV,
        //                hoaDon.getGiamGia(),
        //                hoaDon.getTongTien(),
        //                hoaDon.getTrangThai()
        //
        //            };
        //            model.addRow(data);
        //        }
        //             DefaultTableModel model = (DefaultTableModel) tbHoaDon.getModel();
        //            model.setRowCount(0);
        //            List<HoaDon> hoaDons = hoaDonService.layAllHoaDon();
        //            List<NhanVien> nhanViens = nhanVienService.layAllNhanVien();
        //            List<KhachHang> khachHangs = khachHangService.layAllKhachHang();
        //            String tenKhachHang = "";
        //            String tenNhanVien = "";
        //             for (HoaDon hoaDon : hoaDons) {
        //                for (KhachHang khachHang : khachHangs) {
        //                    if (hoaDon.getMaKhachHang().equals(khachHang.getMaKhachHang())) {
        //                        tenKhachHang = khachHang.getTenKhachHang();
        //                    }
        //                }
        //                for (NhanVien nhanVien : nhanViens) {
        //                    if (hoaDon.getMaNhanVien().equals(nhanVien.getMaNhanVien())) {
        //                        tenNhanVien = nhanVien.getTenNhanVien();
        //                    }
        //                }
    }//GEN-LAST:event_tbHoaDonChiTietMouseClicked

    private void tbHoaDonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMousePressed
        // TODO add your handling code here:
        int index = tbHoaDon.getSelectedRow();
        String ma = tbHoaDon.getValueAt(index, 0).toString();
        lbHoaDonChiTiet.setText(ma);
        List<HoaDonChiTiet> hdcts = hoaDonChiTietServies.getALL(ma);
        DefaultTableModel model = (DefaultTableModel) tbHoaDonChiTiet.getModel();
        model.setRowCount(0);
        List<ChiTietSPViewModels> chiTietSPs = chiTietSPServices.getALL();
        String anh = "";
        for (HoaDonChiTiet hdct : hdcts) {
            JLabel label = new JLabel();
            for (ChiTietSPViewModels chiTietSP : chiTietSPs) {
                if (chiTietSP.getAnh().equals(hdct.getMaImei().getAnh())) {
                    ImageIcon icon = new ImageIcon(chiTietSP.getAnh());
                    Image img = icon.getImage().getScaledInstance(70, 70, Image.SCALE_SMOOTH);
                    label.setIcon(new ImageIcon(img));
                }
            }
            
            Object[] data = new Object[]{
                label,
                hdct.getMaImei().getMaImei(),
                hdct.getSoLuong(),
                hdct.getDonGia()
            };
            model.addRow(data);
        }
    }//GEN-LAST:event_tbHoaDonMousePressed

    private void tbHoaDonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tbHoaDonMouseEntered

    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        // TODO add your handling code here:
        //        int index = tbHoaDon.getSelectedRow();
        //        String ma = tbHoaDon.getValueAt(index, 0).toString();
        //        lbHoaDonChiTiet.setText(ma);
        //        List<HoaDonChiTiet> hdcts = hoaDonChiTietServies.getALL(ma);
        //        DefaultTableModel model = (DefaultTableModel) tbHoaDonChiTiet.getModel();
        //        model.setRowCount(0);
        //        List<ChiTietSPViewModels> chiTietSPs = chiTietSPServices.getALL();
        //        String anh = "";
        //        for (HoaDonChiTiet hdct : hdcts) {
        //            JLabel label = new JLabel();
        //            for (ChiTietSPViewModels chiTietSP : chiTietSPs) {
        //                if (chiTietSP.getAnh().equals(hdct.getMaImei().getAnh())) {
        //                    ImageIcon icon = new ImageIcon(chiTietSP.getAnh());
        //                    Image img = icon.getImage().getScaledInstance(70, 70, Image.SCALE_SMOOTH);
        //                    label.setIcon(new ImageIcon(img));
        //                }
        //            }
        //
        //            Object[] data = new Object[]{
        //                label,
        //                hdct.getMaImei().getMaImei(),
        //                hdct.getSoLuong(),
        //                hdct.getDonGia()
        //            };
        //            model.addRow(data);
        //        }
    }//GEN-LAST:event_tbHoaDonMouseClicked

    private void rbTatCaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbTatCaMousePressed
        // TODO add your handling code here:
        loadHoaDonChiTiet();
    }//GEN-LAST:event_rbTatCaMousePressed

    private void rbDaHuyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbDaHuyMousePressed
        // TODO add your handling code here:
        tbHoaDonChiTiet.getColumn("Ảnh").setCellRenderer(new myTableCellRender());
        DefaultTableModel model = (DefaultTableModel) tbHoaDon.getModel();
        model.setRowCount(0);
        List<HoaDon> hoaDons = hoaDonServices.locTheoTrangThai(1);
        List<NhanVien> nhanViens = nhanVienServices.getALL();
        List<KhachHang> khachHangs = khachHangService.getALL();
        String tenNhanVien = "";
        String tenKH = "";
        String trangThai = "";
        for (HoaDon hoaDon : hoaDons) {
            if (hoaDon.getTrangThai() == 1) {
                trangThai = "Đã Hủy";
            } else {
                trangThai = "Đã thanh toán";
            }
            for (KhachHang khachHang : khachHangs) {
                if (hoaDon.getKhachHang().getMaKH().equals(khachHang.getMaKH())) {
                    tenKH = khachHang.getTenKH();
                }
            }
            for (NhanVien nhanVien : nhanViens) {
                if (hoaDon.getNhanVien().getMaNV().equals(nhanVien.getMaNV())) {
                    tenNhanVien = nhanVien.getTenNV();
                }
            }
           String sdf = "";
            Date date = hoaDon.getNgayMua();
            if (date == null) {
                sdf = "";
               
            }else{
                sdf = new SimpleDateFormat("dd/MM/yyyy").format(date);
            }
            Object[] data = new Object[]{
                hoaDon.getMaHD(),
                hoaDon.getTenNguoiNhan(),
                sdf,
                hoaDon.getGhiChu(),
                hoaDon.getDiaChiNhanHang(),
                tenKH,
                tenNhanVien,
                hoaDon.getGiamGia(),
                hoaDon.getTongTien(),
                trangThai
            
            };
            model.addRow(data);
            
        }
    }//GEN-LAST:event_rbDaHuyMousePressed

    private void rbDaThanhToanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbDaThanhToanMousePressed
        // TODO add your handling code here:
        tbHoaDonChiTiet.getColumn("Ảnh").setCellRenderer(new myTableCellRender());
        DefaultTableModel model = (DefaultTableModel) tbHoaDon.getModel();
        model.setRowCount(0);
        List<HoaDon> hoaDons = hoaDonServices.locTheoTrangThai(2);
        List<NhanVien> nhanViens = nhanVienServices.getALL();
        List<KhachHang> khachHangs = khachHangService.getALL();
        String tenNhanVien = "";
        String tenKH = "";
        String trangThai = "";
        for (HoaDon hoaDon : hoaDons) {
            if (hoaDon.getTrangThai() == 1) {
                trangThai = "Đã Hủy";
            } else {
                trangThai = "Đã thanh toán";
            }
            for (KhachHang khachHang : khachHangs) {
                if (hoaDon.getKhachHang().getMaKH().equals(khachHang.getMaKH())) {
                    tenKH = khachHang.getTenKH();
                }
            }
            for (NhanVien nhanVien : nhanViens) {
                if (hoaDon.getNhanVien().getMaNV().equals(nhanVien.getMaNV())) {
                    tenNhanVien = nhanVien.getTenNV();
                }
            }
            String sdf = "";
            Date date = hoaDon.getNgayMua();
            if (date == null) {
                sdf = "";
               
            }else{
                sdf = new SimpleDateFormat("dd/MM/yyyy").format(date);
            }
             
            Object[] data = new Object[]{
                hoaDon.getMaHD(),
                hoaDon.getTenNguoiNhan(),
                sdf,
                hoaDon.getGhiChu(),
                hoaDon.getDiaChiNhanHang(),
                tenKH,
                tenNhanVien,
                hoaDon.getGiamGia(),
                hoaDon.getTongTien(),
                trangThai
            
            };
            model.addRow(data);
            
        }
    }//GEN-LAST:event_rbDaThanhToanMousePressed

    private void btnInMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInMouseExited

    private void btnInMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInMousePressed
        try {
 
            // TODO add your handling code here:
            int index = tbHoaDon.getSelectedRow();
            if (index == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn cần in !");
                return;
            }
            if (tbHoaDon.getValueAt(index, 9).toString().equals("Đã Hủy")) {
                JOptionPane.showMessageDialog(this, "Hóa đơn này đã hủy nên không thể in !");
                return;
            }
            TaoHoaDonServices taoHoaDonServices = new TaoHoaDonServices();
            String maHd = tbHoaDon.getValueAt(index, 0).toString();
            int check = JOptionPane.showConfirmDialog(this, "Bạn có chắc in hóa đơn " + maHd + " !");
            if (check != JOptionPane.YES_OPTION) {
                return;
            }
            taoHoaDonServices.taoHoaDon(maHd);
            JOptionPane.showMessageDialog(this, "In thành công !");
        } catch (IOException ex) {
            Logger.getLogger(QLHoaDonPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnIn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel hoadon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lbHoaDonChiTiet;
    private javax.swing.JRadioButton rbDaHuy;
    private javax.swing.JRadioButton rbDaThanhToan;
    private javax.swing.JRadioButton rbTatCa;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTable tbHoaDonChiTiet;
    // End of variables declaration//GEN-END:variables
}
